panel.grid.minor=element_blank(),plot.background=element_blank())
g.final<-ggarrange(g.network,g.triangle,nrow=2,ncol=1,heights=c(3,0.5),common.legend = F) +bgcolor("white")
# g.final<-ggarrange(g.T,g.Mono,g.Neu,g.triangle,nrow=4,ncol=1,heights=c(1,1,1,0.5),
#                    labels=c("(A) T Cells","(B) Monocytes","(C) Neutrophils","Immune Components Abundance"),
#                    font.label = list(size=30),common.legend = T) +
#   bgcolor("white")
ggsave(plot=g.final,file=here("..","Plots",paste0(cancer.type,"_quan_intSS_immuAll.png")),width=32,heigh=27)
quanPred_intSS_res_noZ <- readRDS("~/Downloads/quanPred_intSS_res_noZ.RDS")
tmp1<-quan.ls.noZ[[1]]$
tmp1<-quan.ls.noZ[[1]]
View(tmp1)
tmp2<-quanPred_intSS_res_noZ[[1]]
View(tmp2)
tmp1$ePP - tmp2$ePP
tmp1$ePP - tmp2$ePP < 10^(-6)
all(tmp1$ePP - tmp2$ePP < 10^(-6))
max(abs(tmp1$ePP - tmp2$ePP < 10^(-6)))
abs(tmp1$ePP - tmp2$ePP < 10^(-6))
max(abs(tmp1$ePP - tmp2$ePP))
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
quan.ls.noZ<-quanPred_intSS_res_noZ
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
for(h in 2:q){
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
for(qIdx in 1:length(quan.val.vec)){
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
# ggplot(PrBeta.h.quan,aes(x=j,y=k,fill=ePP))+geom_tile()
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
# g<-ggraph(ig,layout = "circle") +
#   geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")),alpha=ePP)) +
#   geom_node_point() +
#   scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
#   scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=F)+
#   geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# # guides(alpha="none",color="none") +
#   theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
# scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph()
}
if(h==2){
g<-g+theme(legend.title=element_text(size=30),legend.text = element_text(size = 30),
plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Reds')[1]))
}
if(h==3){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'YlGn')[1]),
legend.position = "none")
}
if(h==4){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Greens')[1]),
legend.position = "none")
}
g.quan.h[[qIdx]]<-g
}
g.h<-ggarrange(g.quan.h[[1]],g.quan.h[[3]],g.quan.h[[4]],g.quan.h[[5]],g.quan.h[[7]],nrow=1,common.legend = T)
# ggsave(plot=g.h,file=paste0("./Plots/RPPA/hotcold_cmp/LUAD_intSS_quan_",immune.vec[h],".png"),width=32,heigh=9)
g.ls[[(h-1)]]<-g.quan.h
}
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
h<-2
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
qIdx<-1
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
# g<-ggraph(ig,layout = "circle") +
#   geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")),alpha=ePP)) +
#   geom_node_point() +
#   scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
#   scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=F)+
#   geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# # guides(alpha="none",color="none") +
#   theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
# scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph()
}
if(h==2){
g<-g+theme(legend.title=element_text(size=30),legend.text = element_text(size = 30),
plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Reds')[1]))
}
if(h==3){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'YlGn')[1]),
legend.position = "none")
}
if(h==4){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Greens')[1]),
legend.position = "none")
}
g.quan.h[[qIdx]]<-g
ggarrange(g.quan.h[[1]],g.quan.h[[3]],g.quan.h[[4]],g.quan.h[[5]],g.quan.h[[7]],nrow=1,common.legend = T)
for(qIdx in 1:length(quan.val.vec)){
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
# ggplot(PrBeta.h.quan,aes(x=j,y=k,fill=ePP))+geom_tile()
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
# g<-ggraph(ig,layout = "circle") +
#   geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")),alpha=ePP)) +
#   geom_node_point() +
#   scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
#   scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=F)+
#   geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# # guides(alpha="none",color="none") +
#   theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
# scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph()
}
if(h==2){
g<-g+theme(legend.title=element_text(size=30),legend.text = element_text(size = 30),
plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Reds')[1]))
}
if(h==3){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'YlGn')[1]),
legend.position = "none")
}
if(h==4){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Greens')[1]),
legend.position = "none")
}
g.quan.h[[qIdx]]<-g
}
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
PrBeta.h.quan
quan.val
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$U.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
PrBeta.h<-PrBeta[PrBeta$h==h,]
unique(PrBeta.h$U.value)
quan.val.vec<-unique(PrBeta.h$U.value)
g.quan.h<-list()
qIdx
qIdx<-1
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
plt.df
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
# g<-ggraph(ig,layout = "circle") +
#   geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")),alpha=ePP)) +
#   geom_node_point() +
#   scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
#   scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=F)+
#   geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# # guides(alpha="none",color="none") +
#   theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
# scale_edge_alpha_continuous(name="ePP",range=c(0,1),limits=c(0,1),breaks=c(0,0.1,0.25,0.5,0.75,1))+
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph()
}
ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
View(match.df)
match.df<-match.df[order(match.df$protein),]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
quan.ls.noZ<-readRDS(file=here(f.path,"quanPred_intSS_res_noZ.RDS"))
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$U.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
plt.df
nrow(plt.df)
quan.ls.noZ<-quanPred_intSS_res_noZ
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$U.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
quan.ls.noZ<-readRDS(file=here(f.path,"quanPred_intSS_res_noZ.RDS"))
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df2<-plt.df
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
plt.df
plt.df2
quan.ls.noZ<-quanPred_intSS_res_noZ
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$U.value)
g.quan.h<-list()
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$U.value==quan.val,]
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
nrow(plt.df)==0
ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
quan.ls.noZ<-readRDS(file=here(f.path,"quanPred_intSS_res_noZ.RDS"))
cIdx<-1
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
g.ls<-list()
for(h in 2:q){
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
for(qIdx in 1:length(quan.val.vec)){
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
# ggplot(PrBeta.h.quan,aes(x=j,y=k,fill=ePP))+geom_tile()
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
}
if(h==2){
g<-g+theme(legend.title=element_text(size=30),legend.text = element_text(size = 30),
plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Reds')[1]))
}
if(h==3){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'YlGn')[1]),
legend.position = "none")
}
if(h==4){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Greens')[1]),
legend.position = "none")
}
g.quan.h[[qIdx]]<-g
}
g.h<-ggarrange(g.quan.h[[1]],g.quan.h[[3]],g.quan.h[[4]],g.quan.h[[5]],g.quan.h[[7]],nrow=1,common.legend = T)
# ggsave(plot=g.h,file=paste0("./Plots/RPPA/hotcold_cmp/LUAD_intSS_quan_",immune.vec[h],".png"),width=32,heigh=9)
g.ls[[(h-1)]]<-g.quan.h
}
g.T<-ggarrange(plotlist = g.ls[[1]][2:6],common.legend = T,ncol=5,nrow=1)
g.Mono<-ggarrange(plotlist = g.ls[[2]][2:6],common.legend = F,ncol=5,nrow=1)
g.Neu<-ggarrange(plotlist = g.ls[[3]][2:6],common.legend = F,ncol=5,nrow=1)
gLab<-paste0(rep("(",3),LETTERS[1:3],rep(") ",3),immune.vec[2:4])
g.network<-ggarrange(g.T,g.Mono,g.Neu,labels=gLab,nrow=3,ncol=1,
hjust=nchar(gLab)*0.0001,font.label = list(size=30),common.legend = F)
n <- 1800
df.triangle <- data.frame(xstart = 1:n,xend=1:n, ystart=0,yend=seq(0,1,length.out=n))
g.triangle<-ggplot(df.triangle) +
geom_segment(aes(x=xstart,xend=xend,y=ystart,yend=yend,color=xstart)) +
scale_color_gradient(limits=c(1, n), low = brewer.pal(n=9,name="Blues")[2], high = brewer.pal(n=9,name="Blues")[9])+
theme_bw() +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
g.final<-ggarrange(g.network,g.triangle,nrow=2,ncol=1,heights=c(3,0.5),common.legend = F) +bgcolor("white")
# g.final<-ggarrange(g.T,g.Mono,g.Neu,g.triangle,nrow=4,ncol=1,heights=c(1,1,1,0.5),
#                    labels=c("(A) T Cells","(B) Monocytes","(C) Neutrophils","Immune Components Abundance"),
#                    font.label = list(size=30),common.legend = T) +
#   bgcolor("white")
ggsave(plot=g.final,file=here("..","Plots",paste0(cancer.type,"_quan_intSS_immuAll.png")),width=32,heigh=27)
cIdx<-2
cancer.type<-cancer.vec[cIdx]
PrBeta<-quan.ls.noZ[[cIdx]]
PrBeta$Sign<-ifelse(PrBeta$Sign==1,"Positive",ifelse(PrBeta$Sign==-1,"Negative","Zero"))
PrBeta$Sign.fac<-factor(PrBeta$Sign,levels = c("Negative","Zero","Positive"))
g.ls<-list()
for(h in 2:q){
PrBeta.h<-PrBeta[PrBeta$h==h,]
quan.val.vec<-unique(PrBeta.h$X.value)
g.quan.h<-list()
for(qIdx in 1:length(quan.val.vec)){
quan.val<-quan.val.vec[qIdx]
PrBeta.h.quan<-PrBeta.h[PrBeta.h$X.value==quan.val,]
# ggplot(PrBeta.h.quan,aes(x=j,y=k,fill=ePP))+geom_tile()
match.df<-match.ls[[cIdx]]
match.df<-match.df[order(match.df$protein,match.df$Pathway),]
plt.df<-PrBeta.h.quan[PrBeta.h.quan$ePP>0.5,c("j","k","ePP","Sign.fac")]
ig<-graph_from_data_frame(plt.df, directed = FALSE, vertices = match.df)
# ig.sign<-graph_from_data_frame(plt.sign.df, directed = FALSE, vertices = match.df)
if(nrow(plt.df)==0){
g<-ggraph(ig,layout = "circle") +
geom_node_point()+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
# guides(alpha="none",color="none") +
theme_graph() + theme(legend.title=element_text(size=30),legend.text = element_text(size = 30))
}else{
g<-ggraph(ig,layout = "circle") +
geom_edge_link(aes(color=factor(Sign.fac,levels = c("Negative","Zero","Positive")))) +
geom_node_point() +
scale_edge_colour_manual(name="Sign",values=c("Negative"="#F8766D","Zero"="black","Positive"="#00BA38"),drop=T)+
geom_node_text(aes(label = protein),size=6, repel=TRUE)+
theme_graph()
}
if(h==2){
g<-g+theme(legend.title=element_text(size=30),legend.text = element_text(size = 30),
plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Reds')[1]))
}
if(h==3){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'YlGn')[1]),
legend.position = "none")
}
if(h==4){
g<-g+theme(plot.background = element_rect(fill = brewer.pal(n = 9, name = 'Greens')[1]),
legend.position = "none")
}
g.quan.h[[qIdx]]<-g
}
g.h<-ggarrange(g.quan.h[[1]],g.quan.h[[3]],g.quan.h[[4]],g.quan.h[[5]],g.quan.h[[7]],nrow=1,common.legend = T)
# ggsave(plot=g.h,file=paste0("./Plots/RPPA/hotcold_cmp/LUAD_intSS_quan_",immune.vec[h],".png"),width=32,heigh=9)
g.ls[[(h-1)]]<-g.quan.h
}
g.T<-ggarrange(plotlist = g.ls[[1]][2:6],common.legend = T,ncol=5,nrow=1)
g.Mono<-ggarrange(plotlist = g.ls[[2]][2:6],common.legend = F,ncol=5,nrow=1)
g.Neu<-ggarrange(plotlist = g.ls[[3]][2:6],common.legend = F,ncol=5,nrow=1)
gLab<-paste0(rep("(",3),LETTERS[1:3],rep(") ",3),immune.vec[2:4])
g.network<-ggarrange(g.T,g.Mono,g.Neu,labels=gLab,nrow=3,ncol=1,
hjust=nchar(gLab)*0.0001,font.label = list(size=30),common.legend = F)
n <- 1800
df.triangle <- data.frame(xstart = 1:n,xend=1:n, ystart=0,yend=seq(0,1,length.out=n))
g.triangle<-ggplot(df.triangle) +
geom_segment(aes(x=xstart,xend=xend,y=ystart,yend=yend,color=xstart)) +
scale_color_gradient(limits=c(1, n), low = brewer.pal(n=9,name="Blues")[2], high = brewer.pal(n=9,name="Blues")[9])+
theme_bw() +
theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.position="none",
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
g.final<-ggarrange(g.network,g.triangle,nrow=2,ncol=1,heights=c(3,0.5),common.legend = F) +bgcolor("white")
# g.final<-ggarrange(g.T,g.Mono,g.Neu,g.triangle,nrow=4,ncol=1,heights=c(1,1,1,0.5),
#                    labels=c("(A) T Cells","(B) Monocytes","(C) Neutrophils","Immune Components Abundance"),
#                    font.label = list(size=30),common.legend = T) +
#   bgcolor("white")
ggsave(plot=g.final,file=here("..","Plots",paste0(cancer.type,"_quan_intSS_immuAll.png")),width=32,heigh=27)
